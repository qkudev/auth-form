import { useCallback, useEffect, useState, useMemo } from 'react';

import Head from 'next/head';
import { useTranslation } from 'next-i18next';

import { AuthLayout, SignInForm } from '@/components/auth';
import { actions, useAppDispatch, useAppSelector } from '@/store';
import { Link, Typography } from '@/ui/core';
import { urls } from '@/utils/constants';

export function SignInPage() {
  const { error } = useAppSelector((state) => state.auth);
  const [loading, setLoading] = useState(false);
  const dispatch = useAppDispatch();
  const onSubmit = useCallback(
    (payload: AuthAPI.EmailPasswordPayload) => {
      setLoading(true);
      dispatch(
        actions.signIn({
          strategy: 'email',
          payload,
        }),
      );
    },
    [dispatch],
  );
  const { t } = useTranslation('auth');
  const errorLabel = useMemo(() => {
    if (!error) return undefined;
    if (error && error.code) {
      return t(`error-code.${error.code}`);
    }

    return t('error-code.AE000');
  }, [t, error]);

  useEffect(() => {
    if (error) {
      setLoading(false);
    }
  }, [error, setLoading]);

  return (
    <>
      <Head>
        <title>{t('sign-in-page.html.title')}</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <AuthLayout loading={loading} title={t('sign-in-page.title')}>
        <SignInForm
          loading={loading}
          errorLabel={errorLabel}
          onSubmit={onSubmit}
          submitLabel={t('sign-in-page.submit')}
        />

        <footer>
          <Typography variant="body">
            {t('sign-in-page.footer.text')}{' '}
            <Link data-cy="sign-up-link" href={urls.auth.signUp}>
              {t('sign-in-page.footer.link')}
            </Link>
          </Typography>
        </footer>
      </AuthLayout>
    </>
  );
}
